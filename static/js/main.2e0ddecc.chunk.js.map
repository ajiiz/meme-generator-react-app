{"version":3,"sources":["components/Header.js","components/Form.js","components/MemeGenerator.js","components/App.js","index.js"],"names":["Header","Form","props","onSubmit","handleSubmit","type","placeholder","name","value","data","topText","onChange","handleChange","maxlength","bottomText","className","src","randomImage","alt","MemeGenerator","state","allMemeImgs","bind","fetch","then","response","json","memes","setState","event","target","this","preventDefault","length","randomNumber","Math","floor","random","randomImageUrl","url","console","log","Component","App","ReactDOM","render","document","getElementById"],"mappings":"yPAWeA,G,MARA,WACX,OACI,gCACI,kD,0CC6BGC,G,YA/BF,SAACC,GACV,OACI,6BACI,0BAAMC,SAAUD,EAAME,cAClB,2BACIC,KAAK,OACLC,YAAY,WACZC,KAAK,UACLC,MAAON,EAAMO,KAAKC,QAClBC,SAAUT,EAAMU,aAChBC,UAAU,OAEd,2BACIR,KAAK,OACLC,YAAY,cACZC,KAAK,aACLC,MAAON,EAAMO,KAAKK,WAClBH,SAAUT,EAAMU,aAChBC,UAAU,OAEd,6CAEJ,yBAAKE,UAAU,mBACX,yBAAKC,IAAKd,EAAMO,KAAKQ,YAAaC,IAAI,KACtC,yBAAKH,UAAU,aAAab,EAAMO,KAAKC,SACvC,yBAAKK,UAAU,gBAAgBb,EAAMO,KAAKK,gBCuB3CK,E,kDAhDX,aAAe,IAAD,8BACV,gBACKC,MAAO,CACRV,QAAS,GACTI,WAAY,GACZG,YAAa,gCACbI,YAAa,IAEjB,EAAKT,aAAe,EAAKA,aAAaU,KAAlB,gBACpB,EAAKlB,aAAe,EAAKA,aAAakB,KAAlB,gBATV,E,gEAWO,IAAD,OAChBC,MAAM,qCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IACRE,EAASF,EAAShB,KAAlBkB,MACP,EAAKC,SAAS,CACVP,YAAcM,S,mCAIjBE,GAAQ,IAAD,EACMA,EAAMC,OAArBvB,EADS,EACTA,KAAMC,EADG,EACHA,MACbuB,KAAKH,SAAL,eACKrB,EAAOC,M,mCAGHqB,GACTA,EAAMG,iBACN,IAAMC,EAASF,KAAKX,MAAMC,YAAYY,OAChCC,EAAeC,KAAKC,MAAMD,KAAKE,SAAWJ,GAC1CK,EAAiBP,KAAKX,MAAMC,YAAYa,GAAcK,IAC5DC,QAAQC,IAAIP,GACZH,KAAKH,SAAS,CACVX,YAAaqB,M,+BAIjB,OACI,kBAAC,EAAD,CACI7B,KAAMsB,KAAKX,MACXR,aAAcmB,KAAKnB,aACnBR,aAAc2B,KAAK3B,mB,GA3CPsC,aCWbC,G,MATH,WACR,OACI,yBAAK5B,UAAU,kBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,SCLZ6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2e0ddecc.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"../styles/header.css\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>Meme Generator!</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport \"../styles/form.css\"\r\nimport \"../styles/image.css\"\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"top text\"\r\n                    name=\"topText\"\r\n                    value={props.data.topText}\r\n                    onChange={props.handleChange}\r\n                    maxlength=\"25\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"bottom text\"\r\n                    name=\"bottomText\"\r\n                    value={props.data.bottomText}\r\n                    onChange={props.handleChange}\r\n                    maxlength=\"25\"\r\n                />\r\n                <button>Generate</button>\r\n            </form>\r\n            <div className=\"image_container\">\r\n                <img src={props.data.randomImage} alt=\"\" />\r\n                <div className=\"topCenter\">{props.data.topText}</div>\r\n                <div className=\"bottomCenter\">{props.data.bottomText}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form","import React,{Component} from 'react'\r\nimport Form from './Form'\r\n\r\nclass MemeGenerator extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state ={\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImage: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const {memes} = response.data\r\n                this.setState({\r\n                    allMemeImgs : memes\r\n                })\r\n            })\r\n    }\r\n    handleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const length = this.state.allMemeImgs.length\r\n        const randomNumber = Math.floor(Math.random() * length)\r\n        const randomImageUrl = this.state.allMemeImgs[randomNumber].url\r\n        console.log(randomNumber)\r\n        this.setState({\r\n            randomImage: randomImageUrl\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <Form\r\n                data={this.state}\r\n                handleChange={this.handleChange}\r\n                handleSubmit={this.handleSubmit}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator","import React from 'react'\r\nimport Header from './Header'\r\nimport MemeGenerator from './MemeGenerator'\r\nimport \"../styles/app.css\"\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"main_container\">\r\n            <Header />\r\n            <MemeGenerator />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}